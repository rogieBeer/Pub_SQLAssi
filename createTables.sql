-- Assignment Part A
-- Ben Allen - 18044679
-- Rogan Tong - 14062696
CREATE TABLE PAYMENT (
  PAYMENT_ID NUMBER CONSTRAINT PAYMENT_PK PRIMARY KEY,
  PAYMENT_AMOUNT NUMBER CONSTRAINT PAYMENT_AMOUNT_NN NOT NULL,
  PAYMENT_DETAILS VARCHAR2(100) NULL,
  PAYMENT_DATE DATE DEFAULT SYSDATE CONSTRAINT PAYMENT_DATE_NN NOT NULL
);

CREATE TABLE POSITION (
  POSITION_ID NUMBER CONSTRAINT POSITION_PK PRIMARY KEY,
  POSITION_TITLE VARCHAR2(50) CONSTRAINT POSITION_TITLE_NN NOT NULL
);

CREATE TABLE PREREQUISITE (
  PREREQUISITE_NUMBER NUMBER CONSTRAINT PREREQUISITE_PK PRIMARY KEY
);

-- QUAL short for QUALIFICATION
CREATE TABLE QUALIFICATION (
  QUAL_CODE NUMBER CONSTRAINT QUALIFICATION_PK PRIMARY KEY,
  QUAL_TYPE VARCHAR2(20) CONSTRAINT QUAL_TYPE_NN NOT NULL,
  QUAL_TITLE VARCHAR2(30) CONSTRAINT QUAL_TITLE_NN NOT NULL,
  QUAL_LEVEL NUMBER CONSTRAINT QUAL_LEVEL_NN NOT NULL,
  QUAL_PROVIDER VARCHAR2(50) CONSTRAINT QUAL_PROVIDER_NN NOT NULL,
  QUAL_DURATION NUMBER CONSTRAINT QUAL_DURATION_NN NOT NULL
);

CREATE TABLE REGION (
  REGION_CODE NUMBER CONSTRAINT REGION_PK PRIMARY KEY,
  REGION_NAME VARCHAR2(20) CONSTRAINT REGION_NAME_NN NOT NULL
);

CREATE TABLE COURSE (
  COURSE_NUMBER NUMBER CONSTRAINT COURSE_PK PRIMARY KEY,
  COURSE_COST NUMBER CONSTRAINT COURSE_COST_NN NOT NULL,
  PREREQUISITE_NUMBER NUMBER CONSTRAINT PREREQUISITE_NUMBER_FK REFERENCES PREREQUISITE(PREREQUISITE_NUMBER),
  QUAL_CODE NUMBER CONSTRAINT COURSE_QUAL_FK REFERENCES QUALIFICATION(QUAL_CODE) NOT NULL
);

CREATE TABLE TRAINING_SESSION (
  TRAINING_ID NUMBER CONSTRAINT TRAINING_SESSION_PK PRIMARY KEY,
  TRAINING_START DATE CONSTRAINT TRAINING_START_NN NOT NULL,
  TRAINING_FINISH DATE CONSTRAINT TRAINING_FINISH_NN NOT NULL,
  TRAINING_CLASS_SIZE NUMBER CONSTRAINT TRAINING_CLASS_SIZE_NN NOT NULL,
  COURSE_NUMBER NUMBER CONSTRAINT SESSION_COURSE_FK REFERENCES COURSE(COURSE_NUMBER) NOT NULL
);

-- QP is short for QUALIFICATION_PREREQUISITE
CREATE TABLE QUALIFICATION_PREREQUISITE (
  QUALIFICATION_PREREQUISITE_ID NUMBER CONSTRAINT QUALIFICATION_PREREQUISITE_PK PRIMARY KEY,
  QUAL_CODE NUMBER CONSTRAINT QP_QUAL_FK REFERENCES QUALIFICATION(QUAL_CODE) NOT NULL,
  PREREQUISITE_NUMBER NUMBER CONSTRAINT QP_PREREQUISITE_FK REFERENCES PREREQUISITE(PREREQUISITE_NUMBER) ON DELETE CASCADE NOT NULL
);

CREATE TABLE ADDRESS (
  ADDRESS_ID NUMBER CONSTRAINT ADDRESS_PK PRIMARY KEY,
  STREET_NUMBER NUMBER CONSTRAINT STREET_NUMBER_NN NOT NULL,
  STREET_NAME VARCHAR2(100) CONSTRAINT STREET_NAME_NN NOT NULL,
  SUBURB VARCHAR2(25) CONSTRAINT SUBURB_NN NOT NULL,
  CITY VARCHAR2(25) CONSTRAINT CITY_NN NOT NULL,
  REGION_CODE NUMBER CONSTRAINT ADDRESS_REGION_FK REFERENCES REGION(REGION_CODE) NOT NULL
);

CREATE TABLE APPLICANT (
  APPLICANT_ID NUMBER GENERATED BY DEFAULT AS IDENTITY CONSTRAINT APPLICANT_PK PRIMARY KEY NOT NULL,
  CREATION_DATE DATE DEFAULT SYSDATE CONSTRAINT CREATION_DATE_NN NOT NULL,
  APPLICANT_FNAME VARCHAR2(20) CONSTRAINT APPLICANT_FNAME_NN NOT NULL,
  APPLICANT_LNAME VARCHAR2(20) CONSTRAINT APPLICANT_LNAME_NN NOT NULL,
  APPLICANT_DOB DATE CONSTRAINT APPLICANT_DOB_NN NOT NULL,
  APPLICANT_PHONE VARCHAR2(20) CONSTRAINT APPLICANT_PHONE_NN NOT NULL,
  APPLICANT_EMAIL VARCHAR2(100) CONSTRAINT APPLICANT_EMAIL_NN NOT NULL,
  ADDRESS_ID NUMBER CONSTRAINT APPLICANT_ADDRESS_FK REFERENCES ADDRESS(ADDRESS_ID) NOT NULL
);

CREATE TABLE BRANCH (
  BRANCH_NUMBER NUMBER CONSTRAINT BRANCH_PK PRIMARY KEY,
  BRANCH_PHONE NUMBER CONSTRAINT BRANCH_PHONE_NN NOT NULL,
  BRANCH_EMAIL VARCHAR2(100) CONSTRAINT BRANCH_EMAIL_NN NOT NULL,
  ADDRESS_ID NUMBER CONSTRAINT BRANCH_ADDRESS_FK REFERENCES ADDRESS(ADDRESS_ID) NOT NULL
);

-- AQ is short for APPLICANT_QUALIFICATION
CREATE TABLE APPLICANT_QUALIFICATION (
  APPLICANT_QUALIFICATION_ID NUMBER CONSTRAINT APPLICANT_QUALIFICATION_PK PRIMARY KEY,
  AQ_START_DATE DATE CONSTRAINT AQ_START_DATE_NN NOT NULL,
  AQ_FINISH_DATE DATE CONSTRAINT AQ_FINISH_DATE_NN NOT NULL,
  APPLICANT_ID NUMBER CONSTRAINT AQ_APPLICANT_FK REFERENCES APPLICANT(APPLICANT_ID) ON DELETE CASCADE NOT NULL,
  QUAL_CODE NUMBER CONSTRAINT AQ_QUALIFICATION_FK REFERENCES QUALIFICATION(QUAL_CODE) ON DELETE CASCADE NOT NULL
);

CREATE TABLE ENROL (
  ENROL_NUMBER NUMBER CONSTRAINT ENROL_PK PRIMARY KEY,
  APPLICANT_ID NUMBER CONSTRAINT ENROL_APPLICANT_FK REFERENCES APPLICANT(APPLICANT_ID) NOT NULL,
  TRAINING_ID NUMBER CONSTRAINT ENROL_SESSION_FK REFERENCES TRAINING_SESSION(TRAINING_ID) NOT NULL
);

CREATE TABLE COMPANY (
  COMPANY_NUMBER NUMBER CONSTRAINT COMPANY_PK PRIMARY KEY,
  COMPANY_NAME VARCHAR2(50) CONSTRAINT COMPANY_NAME_NN NOT NULL,
  COMPANY_EMAIL VARCHAR2(100) CONSTRAINT COMPANY_EMAIL_NN NOT NULL,
  COMPANY_PHONE VARCHAR(20) CONSTRAINT COMPANY_PHONE_NN NOT NULL,
  ADDRESS_ID NUMBER CONSTRAINT COMPANY_ADDRESS_FK REFERENCES ADDRESS(ADDRESS_ID) NOT NULL,
  BRANCH_NUMBER NUMBER CONSTRAINT COMPANY_BRANCH_FK REFERENCES BRANCH(BRANCH_NUMBER) NOT NULL
);

CREATE TABLE EMPLOYEE (
  EMPLOYEE_ID NUMBER CONSTRAINT EMPLOYEE_PK PRIMARY KEY,
  EMPLOYEE_FNAME VARCHAR2(50) CONSTRAINT EMPLOYEE_FNAME_NN NOT NULL,
  EMPLOYEE_LNAME VARCHAR2(50) CONSTRAINT EMPLOYEE_LNAME_NN NOT NULL,
  EMPLOYEE_DOB DATE CONSTRAINT EMPLOYEE_DOB_NN NOT NULL,
  EMPLOYEE_PHONE VARCHAR(20) CONSTRAINT EMPLOYEE_PHONE_NN NOT NULL,
  EMPLOYEE_EMAIL VARCHAR(100) CONSTRAINT EMPLOYEE_EMAIL_NN NOT NULL,
  EMPLOYEE_START_DATE DATE DEFAULT SYSDATE CONSTRAINT EMPLOYEE_START_DATE_NN NOT NULL,
  ADDRESS_ID NUMBER CONSTRAINT EMPLOYEE_ADDRESS_FK REFERENCES ADDRESS(ADDRESS_ID) NOT NULL,
  BRANCH_ID NUMBER CONSTRAINT EMPLOYEE_BRANCH_FK REFERENCES BRANCH(BRANCH_NUMBER) NOT NULL,
  POSITION_ID NUMBER CONSTRAINT EMPLOYEE_POSITION_FK REFERENCES POSITION(POSITION_ID) NOT NULL
);

-- PT is short for PAYMENT_TOTAL
CREATE TABLE PAYMENT_TOTAL (
  PAYMENT_TOTAL_ID NUMBER CONSTRAINT PAYMENT_TOTAL_PK PRIMARY KEY,
  ENROL_NUMBER NUMBER CONSTRAINT PT_ENROL_FK REFERENCES ENROL(ENROL_NUMBER) NOT NULL,
  PAYMENT_ID NUMBER CONSTRAINT PT_PAYMENT_FK REFERENCES PAYMENT(PAYMENT_ID) NOT NULL
);

CREATE TABLE OPENING (
  OPENING_ID NUMBER CONSTRAINT OPENING_PK PRIMARY KEY,
  OPENING_NAME VARCHAR2(100) CONSTRAINT OPENING_NAME_NN NOT NULL,
  OPENING_PAY NUMBER CONSTRAINT OPENING_PAY_NN NOT NULL,
  OPENING_START_DATE DATE CONSTRAINT OPENING_START_DATE_NN NOT NULL,
  OPENING_FINISH_DATE DATE CONSTRAINT OPENING_FINISH_DATE_NN NOT NULL,
  COMPANY_ID NUMBER CONSTRAINT OPENING_COMPANY_FK REFERENCES COMPANY(COMPANY_NUMBER) ON DELETE CASCADE NOT NULL,
  BRANCH_NUMBER NUMBER CONSTRAINT OPENING_BRANCH_FK REFERENCES BRANCH(BRANCH_NUMBER) NOT NULL,
  QUAL_CODE NUMBER CONSTRAINT OPENING_QUAL_FK REFERENCES QUALIFICATION(QUAL_CODE) NOT NULL
);

CREATE TABLE PLACEMENT (
  PLACEMENT_NUMBER NUMBER CONSTRAINT PLACEMENT_PK PRIMARY KEY,
  -- PLACEMENT_HOURS is the total hours the applicant has logged on the placement
  PLACEMENT_HOURS NUMBER DEFAULT 0 CONSTRAINT PLACEMENT_HOURS_NN NOT NULL,
  OPENING_ID NUMBER CONSTRAINT PLACEMENT_OPENING_FK REFERENCES OPENING(OPENING_ID) NOT NULL,
  APPLICANT_ID NUMBER CONSTRAINT PLACEMENT_APPLICANT_FK REFERENCES APPLICANT(APPLICANT_ID) NOT NULL
);

CREATE TABLE JOB_HISTORY (
  JOB_HISTORY_ID NUMBER CONSTRAINT JOB_HISTORY_PK PRIMARY KEY,
  PLACEMENT_NUMBER NUMBER CONSTRAINT HISTORY_PLACEMENT_FK REFERENCES PLACEMENT(PLACEMENT_NUMBER) ON DELETE CASCADE NOT NULL,
  APPLICANT_ID NUMBER CONSTRAINT HISTORY_APPLICANT_FK REFERENCES APPLICANT(APPLICANT_ID) ON DELETE CASCADE NOT NULL
);
